<nav class="bg-gradient-to-br from-indigo-900 via-purple-800 to-pink-700 border-gray-200 shadow-[0_4px_6px_-1px_rgba(0,0,0,0.1)]" data-controller="mobile-nav">
  <div class="max-w-screen-xl flex flex-wrap items-center justify-between mx-auto p-4">
    <%= render 'shared/logo' %>
    
    <!-- Botão de menu mobile (visível apenas em telas pequenas) -->
    <button type="button" 
            class="inline-flex items-center p-2 w-10 h-10 justify-center text-sm text-white rounded-lg md:hidden hover:bg-purple-700 focus:outline-none focus:ring-2 focus:ring-purple-300" 
            aria-controls="navbar-dropdown" 
            aria-expanded="false"
            data-action="mobile-nav#toggleMenu"
            id="mobile-menu-button"
            style="display: none;">
      <span class="sr-only">Abrir menu principal</span>
      <svg class="w-5 h-5" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 17 14">
        <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M1 1h15M1 7h15M1 13h15"/>
      </svg>
    </button>
    
    <!-- Menu completo para desktop (sempre visível em MD+) -->
    <div class="flex items-center justify-center flex-1 w-auto" id="desktop-menu">
      <div class="flex items-center justify-center flex-grow">
        <%= render 'shared/nav_menu', mobile: false, flowbite_style: true %>
      </div>

      <!-- Desktop User Menu -->
      <div class="flex items-center ml-4">
        <% if user_signed_in? %>
          <div class="relative" data-controller="dropdown">
            <button type="button"
                    data-action="click->dropdown#toggle" 
                    class="flex items-center py-2 px-4 text-white hover:bg-purple-700 rounded-lg transition-colors duration-200">
              <span class="mr-2 font-medium text-lg"><%= current_user.name %></span>
              <svg class="w-5 h-5" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 10 6">
                <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="m1 1 4 4 4-4"/>
              </svg>
            </button>
            <%= render partial: 'shared/user_dropdown_content', locals: { mobile: false, flowbite_style: true } %>
          </div>
        <% else %>
          <%= link_to "Login", new_user_session_path, class: "py-2 px-4 text-white bg-gradient-to-r from-purple-500 to-pink-600 hover:from-purple-600 hover:to-pink-700 rounded-lg font-medium text-lg" %>
        <% end %>
      </div>
    </div>
    
    <!-- Menu mobile colapsável (visível apenas quando aberto em telas pequenas) -->
    <div class="hidden w-full md:hidden" id="navbar-dropdown" data-mobile-nav-target="menu">
      <ul class="flex flex-col font-medium p-4 mt-4 rounded-lg bg-gradient-to-br from-indigo-900 via-purple-800 to-pink-700">
        <%= render 'shared/nav_menu', mobile: true, flowbite_style: true %>        
        <% if user_signed_in? %>
          <li class="relative">
            <div class="px-4 py-3 text-white border-t border-purple-300/20 mt-2">
              <div class="font-medium"><%= current_user.name %></div>
              <div class="text-sm truncate"><%= current_user.email %></div>
            </div>
            <%= render partial: 'shared/user_dropdown_content', locals: { mobile: true, flowbite_style: true } %>
          </li>
        <% else %>
          <li>
            <%= link_to "Login", new_user_session_path, class: "block w-full text-center py-2 px-4 mt-2 rounded-lg bg-gradient-to-r from-purple-500 to-pink-600 text-white font-medium" %>
          </li>
        <% end %>
      </ul>
    </div>
  </div>
</nav>

<script>
  // Script para correção e logging da responsividade da navbar
  document.addEventListener('DOMContentLoaded', function() {
    const desktopMenu = document.getElementById('desktop-menu');
    const mobileButton = document.getElementById('mobile-menu-button');
    const mobileMenu = document.getElementById('navbar-dropdown');
    
    // Função para aplicar estilos baseados no tamanho da tela
    const applyResponsiveStyles = () => {
      const isMobile = window.innerWidth < 768; // breakpoint md do Tailwind
      
      if (isMobile) {
        // Em dispositivos móveis
        desktopMenu.style.display = 'none';
        mobileButton.style.display = 'inline-flex';
      } else {
        // Em dispositivos desktop
        desktopMenu.style.display = 'flex';
        mobileButton.style.display = 'none';
        // Certificar que o menu mobile esteja fechado
        if (mobileMenu) {
          mobileMenu.classList.add('hidden');
        }
      }
      
      // Log do estado atual
      console.log('=== Estado atual da navbar ===');
      console.log(`Largura da tela: ${window.innerWidth}px`);
      console.log(`Desktop menu display: ${window.getComputedStyle(desktopMenu).display}`);
      console.log(`Mobile button display: ${window.getComputedStyle(mobileButton).display}`);
      console.log(`Mobile menu display: ${window.getComputedStyle(mobileMenu).display}`);
      console.log(`Mobile menu tem classe hidden: ${mobileMenu.classList.contains('hidden')}`);
      console.log('============================');
    };
    
    // Aplicar no carregamento da página
    applyResponsiveStyles();
    
    // Aplicar quando a janela for redimensionada
    let resizeTimeout;
    window.addEventListener('resize', function() {
      clearTimeout(resizeTimeout);
      resizeTimeout = setTimeout(applyResponsiveStyles, 250);
    });
  });
</script>
